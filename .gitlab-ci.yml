variables:
  GIT_SUBMODULE_STRATEGY: normal


.build_template: &distro_build
  script:
    - meson _build
    - ninja -C _build install

stages:
   - flatpak
   - build


##################
# Fedora Rawhide #
##################

fedora:rawhide:
    image: fedora:rawhide
    stage: build

    before_script:
      - dnf install -y gcc meson ninja-build gettext gtk-doc glib2-devel gtk3-devel
        gnome-online-accounts-devel libpeas-devel evolution-data-server-devel
        rest-devel json-glib-devel

    <<: *distro_build
    only:
    - schedules
    - web
    - tags



################
# Ubuntu Devel #
################

ubuntu:devel:
    image: ubuntu:devel
    stage: build
    before_script:
    # Ubuntu requires running update to fetch metadata and find packges
    - apt update
    - apt install -y gcc meson gettext gtk-doc-tools libglib2.0-dev git libgtk-3-dev
                     libgoa-1.0-dev libpeas-dev libecal1.2-dev libedataserver1.2-dev
                     librest-dev libjson-glib-dev
    <<: *distro_build
    only:
    - schedules
    - web
    - tags



##################
# Flatpak Bundle #
##################

flatpak:
  stage: flatpak
  image: registry.gitlab.gnome.org/gnome/gnome-nightly-oci/nightly:master
  artifacts:
    name: package
    paths:
    - $(pwd)/*.flatpak

  variables:
    APPID: "org.gnome.TodoDevel"
    BUNDLE: "org.gnome.TodoDevel.flatpak"
    MANIFEST_PATH: "org.gnome.Todo.json"
    PATCHES: "build-aux/flatpak/*.patch"
    PROJECT_FILE: "build-aux/flatpak/org.gnome.Todo.json"
    PROJECT_ID: "org.gnome.Todo"
    PROJECT_NAME: "gnome-control-center.git"
    RUNTIME_REPO: "https://sdk.gnome.org/gnome-nightly.flatpakrepo"

  script:
    - echo "== Flatpak packaging =="

    # Move needed files to the root folder
    - cp ${PATCHES} . || true
    - cp ${PROJECT_FILE} ${MANIFEST_PATH}

    # Make it a develoment manifest
    - sed -i -n "p; s/$PROJECT_NAME//p" ${MANIFEST_PATH}
    - >
      sed -i "s,\"app-id\" : \"$PROJECT_ID\",\"app-id\" : \"<<ID>>\",g" ${MANIFEST_PATH}
    - >
      sed -i "s,\"url\" : \"https://gitlab.gnome.org/GNOME/$PROJECT_NAME\",\"branch\" : \"<<current>>\"\,,g" ${MANIFEST_PATH}
    - >
      sed -i "s,\"url\" : \"https://gitlab.gnome.org/GNOME/\",\"path\" : \".\",g" ${MANIFEST_PATH}

    # Adjust the manifest to HEAD
    - sed -i "s,<<ID>>,$APPID,g" ${MANIFEST_PATH}
    - sed -i "s,<<current>>,origin/$CI_COMMIT_REF_NAME,g" ${MANIFEST_PATH}

    - flatpak-builder --bundle-sources --repo=devel build ${MANIFEST_PATH}
    - flatpak build-bundle devel ${BUNDLE} --runtime-repo=${RUNTIME_REPO} ${APPID}

  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://gitlab.gnome.org/$CI_PROJECT_PATH/-/jobs/$CI_JOB_ID/artifacts/raw/${BUNDLE}
